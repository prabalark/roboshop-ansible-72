#- name: copy ansible file
#  ansible.builtin.copy:
#    src: mongo.repo
#    dest: /etc/yum.repos.d/mongo.repo
#  when: schema == "mongo"
#
#- name: install mongodb client
#  ansible.builtin.yum:
#    name: mongodb-org-shell
#    state: installed
#  when: schema == "mongo"
#
#- name: load schema
#  ansible.builtin.shell: mongo --host {{ lookup('aws_ssm','dev.frontend.catalogue_mongoendpoint',region='us-east-1') }} </app/schema/{{component}}.js
#  when: schema == "mongo"

- name: loading mongo schema
  when: schema == "mongo"
  block:
    - name : copy ansible file
      ansible.builtin.copy:
        src: mongo.repo
        dest: /etc/yum.repos.d/mongo.repo

    - name: install mongodb client
      ansible.builtin.yum:
        name: mongodb-org-shell
        state: installed

    - name: load schema
      ansible.builtin.shell: mongo --host {{ lookup('aws_ssm','dev.frontend.catalogue_mongoendpoint',region='us-east-1') }} </app/schema/{{component}}.js

#------------#shipping-mysql------------------#
#dnf install mysql -y &>>${log_path}
#RoboShop@1 --password as input
#mysql -h mysql.devops72bat.online -uroot -p${mysqlpassword} < /app/schema/${component_shp}.sql &>>${log_path}

- name: loading mysql schema
  when: schema == "mysql"
  block:
    - name : install mysql
      ansible.builtin.yum:
        name: mysql
        state: installed

    - name: load schema
      ansible.builtin.shell: mysql -h {{ lookup('aws_ssm','dev.frontend.shipping_db_host',region='us-east-1') }} -u{{ lookup('aws_ssm','dev.frontend.shipping_user',region='us-east-1') }} -p{{ lookup('aws_ssm','dev.frontend.shipping_password',region='us-east-1') }} < /app/schema/{{component_shp}}.sql

#------------#payment-rabbitmq------------------#
 # print_head "download rabbitmq"
 # curl -s https://packagecloud.io/install/repositories/rabbitmq/erlang/script.rpm.sh | bash &>>${log_path}
 # func_exit $?
 # curl -s https://packagecloud.io/install/repositories/rabbitmq/rabbitmq-server/script.rpm.sh | bash &>>${log_path}
 # func_exit $?
 #
 # print_head "install rabbitmq"
 # dnf install rabbitmq-server -y &>>${log_path}
 # func_exit $?
 #
 # print_head "start rabbitmq"
 # systemctl enable rabbitmq-server &>>${log_path}
 # systemctl restart rabbitmq-server &>>${log_path}
 # func_exit $?
 #
 # #roboshop123
 # print_head "adduser rabbitmq"
 # rabbitmqctl add_user roboshop ${rabbitm1_lg_password} &>>${log_path}
 # func_exit $?
 # rabbitmqctl set_permissions -p / roboshop ".*" ".*" ".*" &>>${log_path}
 # func_exit $?

 doubts
- my sql repo was not kept
  
  rabbit mq file was not kept in schema


















